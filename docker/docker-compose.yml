version: "3.9"

services:
  postgres:
    build:
      context: ./postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - web

  redis:
    build:
      context: ./redis
      args:
        - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - web

  php-fpm:
    build:
      context: ./php-fpm
      args:
        - GITHUB_OAUTH_TOKEN=${GITHUB_OAUTH_TOKEN}
    environment:
      - PHP_OPCACHE_ENABLE=${PHP_OPCACHE_ENABLE}
      - PHP_XDEBUG_MODE=${PHP_XDEBUG_MODE}
      - PHP_XDEBUG_CLIENT_HOST=${PHP_XDEBUG_CLIENT_HOST}
      - PHP_XDEBUG_IDEKEY=${PHP_XDEBUG_IDEKEY}
    volumes:
      - ../apps:/home/apps
    networks:
      - web

  #apache:
  #  build:
  #    context: ./apache
  #  environment:
  #    - TZ=${TZ}
  #  volumes:
  #    - ../apps:/home/apps
  #  ports:
  #    - 8090:80
  #    - 443:443
  #  networks:
  #    web:
  #      aliases:
  #        - app.local
  #  depends_on:
  #    - php-fpm

  nginx:
    build:
      context: ./nginx
    volumes:
      - ../apps:/home/apps
    ports:
      - 8080:80
      - 443:443
    networks:
      - web
    depends_on:
      - php-fpm

  python:
    build:
      context: ./python
    volumes:
      - ../apps:/home/apps
    ports:
      - 5000:5000
    networks:
      - web

  node:
    build:
      context: ./node
    volumes:
      - ../apps:/home/apps
    ports:
      - 3000:3000
    networks:
      - web

volumes:
  redis-data:
  postgres-data:

networks:
  web:
