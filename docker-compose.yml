version: "3.2"

services:
  postgres:
    build: ./postgres
    environment:
      - TZ=${TZ}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - web

  mysql:
    build: ./mysql
    environment:
      - TZ=${TZ}
      - MYSQL_ROOT_HOST=${MYSQL_ROOT_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - web

  #mariadb:
  #  build: ./mariadb
  #  environment:
  #    - TZ=${TZ}
  #    - MYSQL_ROOT_HOST=${MYSQL_ROOT_HOST}
  #    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
  #    - MYSQL_DATABASE=${DB_NAME}
  #    - MYSQL_USER=${DB_USER}
  #    - MYSQL_PASSWORD=${DB_PASSWORD}
  #  volumes:
  #    - mariadb-data:/var/lib/mariadb/data
  #  ports:
  #    - 3306:3306
  #  networks:
  #    - web

  redis:
    build:
      context: ./redis
      args:
        - REDIS_PASSWORD=${REDIS_PASSWORD}
    environment:
      - TZ=${TZ}
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
    networks:
      - web

  php-fpm:
    build:
      context: ./php-fpm
      args:
        - GITHUB_OAUTH_TOKEN=${GITHUB_OAUTH_TOKEN}
    environment:
      - TZ=${TZ}
      - PHP_OPCACHE_ENABLE=${PHP_OPCACHE_ENABLE}
      - PHP_XDEBUG_ENABLE=${PHP_XDEBUG_ENABLE}
      - PHP_XDEBUG_REMOTE_HOST=${PHP_XDEBUG_REMOTE_HOST}
      - PHP_XDEBUG_IDEKEY=${PHP_XDEBUG_IDEKEY}
    volumes:
      - ../www:/srv/www
    networks:
      - web

  nginx:
    build:
      context: ./nginx
    environment:
      - TZ=${TZ}
    volumes:
      - ../www:/srv/www
    ports:
      - 80:80
      - 443:443
    networks:
      web:
        aliases:
          - app.local
          - wordpress.local
          - yii2basic.local
          - yii2advanced.local

  #apache:
  #  build:
  #    context: ./apache
  #  environment:
  #    - TZ=${TZ}
  #  volumes:
  #    - ../www:/srv/www
  #  ports:
  #    - 8080:80
  #  networks:
  #    - web

  #php-apache:
  #  build:
  #    context: ./php-apache
  #  environment:
  #    - TZ=${TZ}
  #  volumes:
  #    - ../www:/srv/www
  #  ports:
  #    - 8090:80
  #  networks:
  #    - web

  node:
    build: ./node
    environment:
      - TZ=${TZ}
    volumes:
      - ../www:/srv/www
    ports:
      - 3000:3000

volumes:
  postgres-data:
  mysql-data:
  #mariadb-data:
  redis-data:

networks:
  web:
